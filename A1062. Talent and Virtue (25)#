/*
https://www.patest.cn/contests/pat-a-practise/1062
类型：排序（可以直接用stl）
难度：1
*/ 

#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector> 
using namespace std;

struct info{
	int id;
	int virtueGrade;
	int talentGrade;
	int totalGrade;
	int hierarchy;//1=saga,2=nobleman,3=foolmen,4=simplyQualified,5=unqualified
	info(int a,int b,int c,int d){
		id=a;
		virtueGrade=b;
		talentGrade=c;
		hierarchy=d;
		totalGrade=b+c;
	}
};

int n;//people.
int l;//qualified grades.
int h;//higher line of qualification.

vector<struct info> tv;

bool cmp(struct info a,struct info b){
	if(a.hierarchy==b.hierarchy){
		if(a.totalGrade==b.totalGrade){
			if(a.virtueGrade==b.virtueGrade){
				return a.id<b.id;
			}else return a.virtueGrade>b.virtueGrade;
		}else return a.totalGrade>b.totalGrade;
	}else return a.hierarchy<b.hierarchy;
}

int main(){
	scanf("%d%d%d",&n,&l,&h);
	for(int i=0;i<n;i++){
		int idd,vir,tale;
		scanf("%d%d%d",&idd,&vir,&tale);
		if(vir>=l&&tale>=l){//先要合格才能排名。
			if(vir>=h&&tale>=h){
				tv.push_back(info(idd,vir,tale,1));
			}else if(vir>=h&&tale<h){
				tv.push_back(info(idd,vir,tale,2));
			}else if(tale<h&&vir<h&&vir>=tale){
				tv.push_back(info(idd,vir,tale,3));
			}else{
				tv.push_back(info(idd,vir,tale,4));
			}
		}
	}
	
	sort(tv.begin(),tv.end(),cmp);
	
	printf("%d\n",tv.size());
	for(int i=0;i<tv.size();i++){
		printf("%d %d %d\n",tv[i].id,tv[i].virtueGrade,tv[i].talentGrade);
	}
	return 0;
}
