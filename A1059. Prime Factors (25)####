/*
https://www.patest.cn/contests/pat-a-practise/1059

难度：4
*/

/*
1、此处求素数表，只需要固定范围内的即可。
2、用埃氏筛法好像导致了段错误，我也不是很确定。
我写的埃氏筛法代码如下：
const int maxn_prime=100010;
int prime[maxn_prime]={0};int primePtr=0;
bool filter_nonprime[maxn_prime]={0};//如果不是素数，就置为1，即true。
//求得素数表。
void find_prime(int n){//找[2,n]范围内的素数
  for(int i=2;i<=n;i++){
    if(filter_nonprime[i]==false){
      prime[primePtr++]=i;//这一步不要忘。
      for(int j=i+i;j<=n;j+=i){
        filter_nonprime[j]=true;//可能是因为n比maxn_prime大很多。
      }
    }
  }
}
*/

#include<stdio.h>

#include<iostream>
#include<algorithm>
#include<cmath>
using namespace std;

const int maxn=100010;
int prime[maxn]={0};int primePtr=0;

bool isPrime(int x){
	if(x<=1)return false;
	if(x==2)return true;
	int t=(int)sqrt(x*1.0);
	for(int i=2;i<=t;i++){
		if(x%i==0)return false;
	}
	return true;
}

void find_prime(){//如果不找[2,maxn]之间的素数，而是找[2，x]之内的素数会发生超时，此处x是题中所给的n的大小。超时可能是因为n过大，而所需的素数只是一部分，maxn以内的即可，不需要大到n。
	for(int i=2;i<=maxn;i++){
		if(isPrime(i)){
			prime[primePtr++]=i;
		}
	}
}

struct factor{
	int x,cnt;
}fac[maxn];
int factorPtr=0;

//确定小于sqrt(n)的素因子。
int find_factor_1(int n,int sqr){
	int p;
	for(int i=0;i<primePtr&&prime[i]<=sqr;i++){
		p=prime[i];
		if(n%p==0){
			fac[factorPtr].x=p;
			fac[factorPtr].cnt=0;
			while(n%p==0){
				fac[factorPtr].cnt++;
				n/=p;
			}
			factorPtr++;
		}
		if(n==1)break;
	}
	return n;
}
//确定大于sqrt(n)的素因子。
void find_factor_2(int x){
	if(x!=1){
		fac[factorPtr].x=x;
		fac[factorPtr++].cnt=1;
	}
}

int main(){
	int n;
	cin>>n;
	cout<<n<<"=";
	if(n==1){//不要忘了特判1，因为题目输出有要求。
		printf("1");
	}else{
		find_prime();
		int left=find_factor_1(n,(int)sqrt(n*1.0));
		find_factor_2(left);
		
		for(int i=0;i<factorPtr;i++){
			if(i)printf("*");
			printf("%d",fac[i].x);
			if(fac[i].cnt!=1){
				printf("^%d",fac[i].cnt);
			}
		}
	}
	
	return 0;
}
