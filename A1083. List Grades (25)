/*
https://www.patest.cn/contests/pat-a-practise/1083

类型：排序。

难度：0

注意事项；
1. 注意此题中数组从1开始记录，所以sort的区间要相应从1开始。 
2. 没给n的范围，所以用vector做可能更严谨，不过这道题假设n最大为一万就能通过了。
*/

//先排序，不需要的数据直接不输出了。
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector> 
using namespace std;

const int MAXN=10010;
const int MAXK=6;
const int INF=1000000000;

struct info{
	char name[11];
	char id[11];
	int grade;
}lg[MAXN];

bool cmp(info a,info b){
	return a.grade>b.grade;
}

int n;
int grade1,grade2;
int main(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		scanf("%s %s %d",lg[i].name,lg[i].id,&lg[i].grade);
	}
	scanf("%d%d",&grade1,&grade2);

	sort(lg+1,lg+n+1,cmp);//排序的区间需注意是从1开始的。 
	
	int count=0;
	for(int i=1;i<=n;i++){
		int x=lg[i].grade;
		if(x>=grade1&&x<=grade2){
			printf("%s %s\n",lg[i].name,lg[i].id);
			count++;
		}
	}
	if(!count){
		printf("NONE");
	}
	
	return 0;
}

//以为这道题没做，又做了一遍。下面是先筛选，再排序。
#include <cstdio>
#include<iostream>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

const int MAXN = 10005;

#define rep(i,n) for(int i=0;i<n;i++)

int n;
int grade1, grade2;
struct info {
  char name[12];
  char id[12];
  int grade;
}record[MAXN];

bool cmp(info &a, info &b) {
  return a.grade > b.grade;
}

vector<info> ans;
int main(){
  cin >> n;
  rep(i, n) {
    scanf("%s%s%d", record[i].name, record[i].id, &record[i].grade);
  }
  cin >> grade1 >> grade2;
  rep(i, n) {
    if (record[i].grade <= grade2 && record[i].grade >= grade1) {
      ans.push_back(record[i]);
    }
  }
  if (ans.size()) {
    sort(ans.begin(), ans.end(), cmp);
    rep(i, ans.size()) {
      printf("%s %s\n", ans[i].name, ans[i].id);
    }
  }
  else {
    printf("NONE\n");
  }
  
  return 0;
}
