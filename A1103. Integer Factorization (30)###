/*
https://www.patest.cn/contests/pat-a-practise/1103

类型：背包问题，数的分解（把一个数分解成若干次方项的和）。

难度：3
*/
#include"stdafx.h"
#include<cstdio>
#include<iostream>
#include<cmath>
#include<algorithm>
#include<vector>
using namespace std;

const int MAXN=100010;

int n,k,p;

struct info{
	vector<int> seq;
	int sum;
	info() { sum = 0; };
};
vector<info> seq;
info tmp;

//sum当前选择的因子的p次方的和。factorNum当前选中的因子数。factor当前判断是否要选择的因子，factor从高到低递减。
void choose(int sum,int factorNum,int factor){
	if(sum>n||factorNum>k||factor<=0)return;
	if(sum==n&&factorNum==k){
		seq.push_back(tmp);
		return;
	}
	//选择factor作为当前因子。
	tmp.seq.push_back(factor);
	tmp.sum+=factor;
	choose(sum+pow(factor,p),factorNum+1,factor);
	tmp.seq.pop_back();
	tmp.sum-=factor;
	//不选择factor作为当前因子，则继续考虑factor-1。
	choose(sum,factorNum,factor-1);
}

void print(info &x){
	printf("%d = ", n);
	for(int i=0;i<x.seq.size();i++){
		if (i) printf(" + ");
		printf("%d^%d",x.seq[i],p);
	}
	//printf("\nsum=%d\n",x.sum);
}

int numcmp(vector<int> &a,vector<int> &b){
	int len=a.size();//因为该题目中vector中的序列长度都为k。所以用a用b的大小都一样。
	for(int i=0;i<len;i++){
		if(a[i]>b[i])return 1;
		if(b[i]>a[i])return -1;
	}
	return 0;
}

bool cmp(info a,info b) {
	if(a.sum==b.sum){
		return numcmp(a.seq,b.seq)>0;
	}else return a.sum>b.sum;
}

int main() {
	cin>>n>>k>>p;
	choose(0,0,(int)sqrt(n)+1);
	//for(int i=0;i<seq.size();i++){
	//	print(seq[i]);
	//}
	if (seq.size() ==0) {
		printf("Impossible");
	}else {
		sort(seq.begin(), seq.end(), cmp);
		print(seq[0]);
	}
	return 0;
}
