/*
https://www.patest.cn/contests/pat-a-practise/1090

类型：图的遍历。

难度:2
*/
#include"stdafx.h"
#include<cstdio>
#include<iostream>
#include<queue>
using namespace std;

const int MAXN=100010;
int n;//members.[0,n-1].
double p;//unit price.
double r;//percentage rate of price increment.

struct info{
	vector<int> next;
	//double price;
}member[MAXN];

int totalMax;
double maxP=0;
void dfs(int index,double totalP){
	if(member[index].next.size()==0){
		if(totalP>maxP){
			maxP = totalP;
			totalMax=1;
		}else if(totalP==maxP){
			totalMax++;
		}
		return;
	}
	for(int i=0;i<member[index].next.size();i++){
		dfs(member[index].next[i],totalP*(1+r/100));
	}
}

int main() {
	cin>>n>>p>>r;
	int root;
	for(int i=0;i<n;i++){
		int f;
		scanf("%d",&f);
		if(f!=-1){
			member[f].next.push_back(i);
		}else{
			root=i;
		}
	}
	//member[root].price=p;
	dfs(root,p);
	printf("%.2lf %d",maxP,totalMax);
	return 0;
}
